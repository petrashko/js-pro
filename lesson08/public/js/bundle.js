(()=>{"use strict";class t{constructor(t){this.id=+t.id_product,this.title=t.product_name,this.price=+t.price,this.imgSrc=`../images/imgProd-${t.id_product}.jpg`}}class o extends t{constructor(t){super(t),t.quantity?this.amount=+t.quantity:this.amount=1}}const e={props:["showerror"],data:()=>({productList:[],cartList:[],strSearch:""}),computed:{filteredList(){if(0===this.strSearch.trim().length)return this.productList;const t=new RegExp(this.strSearch.trim(),"i");return this.productList.filter((o=>t.test(o.title)))}},methods:{searching(t,o){t.preventDefault(),this.strSearch=o},addToCart(t,e){t.preventDefault();let s=this.cartList.find(((t,o,s)=>t.id===e.id));if(s)this.$parent.putJson(`/api/cart/${s.id}`,{amount:1}).then((t=>{1===t.result&&(s.amount++,this.$emit("update-cart",this.cartList),window.scrollTo({top:0,behavior:"smooth"}))})).catch((t=>{console.log(t),this.showerror()}));else{const t={id_product:e.id,product_name:e.title,price:e.price,quantity:1};this.$parent.postJson("/api/cart",t).then((e=>{if(1===e.result){const e=new o(t);this.cartList.push(e),this.$emit("update-cart",this.cartList),window.scrollTo({top:0,behavior:"smooth"})}})).catch((t=>{console.log(t),this.showerror()}))}},getProductList(){this.$parent.getJson("/api/products").then((o=>{this.productList=o.map((o=>new t(o))),this.$emit("update-catalog",this.productList)})).catch((t=>{console.log(t),this.showerror()}))},getCartProductList(){this.$parent.getJson("/api/cart").then((t=>{this.cartList=t.contents.map((t=>new o(t))),this.$emit("update-cart",this.cartList)})).catch((t=>{console.log(t),this.showerror()}))}},components:{"search-form":{data:()=>({strSearch:""}),methods:{onSearch(t){this.strSearch=this.$refs.inputSearch.value.trim(),this.$emit("filtering",t,this.strSearch)}},template:'<div class="text-center">\n            <form action="#" class="search-form">\n                <input type="text" class="search-field" v-bind:value="strSearch" ref="inputSearch">\n                <button class="btn-search" type="submit" v-on:click="onSearch($event)">Найти</button>\n            </form>\n        </div>'},"product-card":{props:["product"],methods:{handlerAddToCart(t,o){this.$emit("add",t,o)}},template:'<div class="product-card">\n            <img v-bind:src="product.imgSrc" alt="picture" />\n            <h3 class="product-name">\n                <a href="product.html">{{product.title}}</a>\n            </h3>\n            <p class="product-description">\n                Описание товара: Lorem ipsum, dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor\n                ncididunt ut labore et dolore magna aliqua.\n            </p>\n            <strong class="product-price">$ {{product.price}}</strong>\n            <div class="product-img-overlay text-center">\n                <button class="btn-add-card"\n                    v-bind:data-product-id="product.id"\n                    v-on:click="handlerAddToCart($event, product)">Добавить в корзину</button>\n            </div>\n        </div>'}},mounted(){this.getProductList(),this.getCartProductList()},template:'\x3c!-- Блок с карточками товаров --\x3e\n        <section class="products-section">\n            <search-form v-on:filtering="searching"></search-form>\n            <div class="container products">\n                \x3c!-- Блок для вывода суммарной стоимость всех товаров --\x3e\n                <div class="text-center total-cost"></div>\n                <div class="product-items">\n                    \x3c!-- Здесь динамически добавляются карточки с товаром --\x3e\n                    <article v-for="prod of filteredList" :key="prod.id">\n                        <product-card v-bind:product="prod" v-on:add="addToCart"></product-card>\n                    </article>\n                </div>\n\n                \x3c!-- Если товаров нет - показать сообщение --\x3e\n                <p class="text-center" v-if="filteredList.length < 1">По вашему зарпросу ничего не найдено</p> \n                \n                \x3c!--\n                <button class="cart-btn" type="button">Корзина</button>\n                --\x3e\n            </div>\n            \x3c!-- END: div class="container products" --\x3e\n        </section>'},s={props:["showerror"],data:()=>({productList:[]}),computed:{cost(){return this.productList.reduce(((t,o,e,s)=>t+o.price*o.amount),0)}},methods:{continueShopping(t){this.$emit("shopping",t)},removeProduct(t,o){t.preventDefault();let e=this.productList.find(((t,e,s)=>t.id===o.id));e.amount>1?this.$parent.putJson(`/api/cart/${e.id}`,{amount:-1}).then((t=>{1===t.result&&(e.amount--,this.$emit("update-cart",this.productList),window.scrollTo({top:0,behavior:"smooth"}))})).catch((t=>{console.log(t),this.showerror()})):this.$parent.deleteJson(`/api/cart/product/${e.id}`).then((t=>{1===t.result&&(this.productList.splice(this.productList.indexOf(e),1),this.$emit("update-cart",this.productList),window.scrollTo({top:0,behavior:"smooth"}))})).catch((t=>{console.log(t),this.showerror()}))},onClear(t){t.preventDefault(),this.$parent.deleteJson("/api/cart/clear").then((t=>{1===t.result&&(this.productList.splice(0,this.productList.length),this.$emit("update-cart",this.productList))})).catch((t=>{console.log(t),this.showerror()}))},getProductList(){this.$parent.getJson("/api/cart").then((t=>{this.productList=t.contents.map((t=>new o(t))),this.$emit("update-cart",this.productList)})).catch((t=>{console.log(t),this.showerror()}))}},components:{"cart-item":{props:["product"],methods:{handlerRemoveProduct(t,o){this.$emit("remove",t,o)}},template:'<div class="cart-item">\n            <div class="cart-item-image">\n                <img v-bind:src="product.imgSrc" height="18" alt="picture" />\n            </div>\n            <div class="cart-item-info">\n                <h3 class="cart-item-info-caption">{{product.title}}</h3>\n                <p class="info-paragraf">Price: <span class="cart-item-price">$ {{product.price}}</span></p>\n                <p class="info-paragraf">\n                    Описание товара: Lorem ipsum, dolor sit amet, consectetur adipiscing elit, sed do\n                    eiusmod tempor ncididunt ut labore et dolore magna aliqua.\n                </p>\n                <p class="info-paragraf">Quantity:\n                    <input type="number" v-bind:value="product.amount" readonly />\n                </p>\n            </div>\n            <div class="div-btn-close">\n                <button class="cart-item-btn-close btn-del-item"\n                        v-bind:data-product-id="product.id"\n                        v-on:click="handlerRemoveProduct($event, product)">\n                    <svg width="18" height="18" viewBox="0 0 18 18" xmlns="http://www.w3.org/2000/svg">\n                        <path d="M11.2453 9L17.5302 2.71516C17.8285 2.41741 17.9962 2.01336 17.9966 1.59191C17.997 1.17045 17.8299 0.76611 17.5322 0.467833C17.2344 0.169555 16.8304 0.00177586 16.4089 0.00140366C15.9875 0.00103146 15.5831 0.168097 15.2848 0.465848L9 6.75069L2.71516 0.465848C2.41688 0.167571 2.01233 0 1.5905 0C1.16868 0 0.764125 0.167571 0.465848 0.465848C0.167571 0.764125 0 1.16868 0 1.5905C0 2.01233 0.167571 2.41688 0.465848 2.71516L6.75069 9L0.465848 15.2848C0.167571 15.5831 0 15.9877 0 16.4095C0 16.8313 0.167571 17.2359 0.465848 17.5342C0.764125 17.8324 1.16868 18 1.5905 18C2.01233 18 2.41688 17.8324 2.71516 17.5342L9 11.2493L15.2848 17.5342C15.5831 17.8324 15.9877 18 16.4095 18C16.8313 18 17.2359 17.8324 17.5342 17.5342C17.8324 17.2359 18 16.8313 18 16.4095C18 15.9877 17.8324 15.5831 17.5342 15.2848L11.2453 9Z"/>\n                    </svg>\n                </button>\n            </div>\n        </div>'}},mounted(){this.getProductList()},template:'\x3c!-- Основную часть страницы делим на левый и правый блоки --\x3e\n        <section class="container cart-main">\n            <div class="cart-main-left">\n                \x3c!-- Блоки с товаром, которые есть в корзине --\x3e\n                <div class="cart-item-list">\n                    \x3c!-- Здесь динамически добавляются карточки с товаром --\x3e\n                    <template v-for="prod of productList" :key="prod.id">\n                        <cart-item v-bind:product="prod" v-on:remove="removeProduct"></cart-item>\n                    </template>\n                </div>\n\n                \x3c!-- Если корзина пустая - показать сообщение --\x3e\n                <p class="text-center" v-if="productList.length < 1">Пустая корзина</p> \n\n                \x3c!-- Блок с двумя кнопками --\x3e\n                <div class="shopping-buttons">\n                    <button class="shopping-buttons-btn clear-cart-btn"\n                        v-on:click="onClear($event)">Очистить корзину</button>\n                    <button class="shopping-buttons-btn"\n                        v-on:click="continueShopping($event)">Перейти в каталог</button>\n                </div>\n            </div>\n            <div class="cart-main-right">\n                \x3c!-- Форма заказа --\x3e\n                <div class="order-form">\n                    <form action="#" class="order-form-main">\n                        <h4 class="order-form-main-caption">SHIPPING ADRESS</h4>\n                        <input type="text" id="country" name="country" class="order-form-main-country" placeholder="Bangladesh" />\n                        <input type="text" id="state" name="state" class="order-form-main-zip" placeholder="State" />\n                        <input type="text" id="zip" name="zip" class="order-form-main-zip" placeholder="Postcode  Zip" />\n                        <button type="submit" class="order-form-main-submit">GET A QUOTE</button>\n                    </form>\n                </div>\n                \x3c!-- Общая информация о заказе --\x3e\n                <div class="order-total">\n                    <p class="order-total-sub">sub total <span class="order-total-cost">$ {{ cost }}</span></p>\n                    <p class="order-total-grand">Общая стоимость заказа: <span class="order-total-cost" style="color: #F16D7F;">$ {{ cost }}</span></p>\n                    <hr />\n                    <button class="order-total-btn">procced to checkout</button>\n                </div>\n            </div>\n        </section>'},r={methods:{onClose(t){this.$emit("close-modal",t)}},template:'<div class="error-modal" id="error-modal">\n            <div class="error-modal-backdrop">\n                \x3c!--\n                <button class="error-modal-close">Закрыть</button>\n                --\x3e\n            </div>\n            <div class="error-modal-body">\n                <button class="error-modal-close" v-on:click="onClose($event)">Закрыть</button>\n                <div class="error-modal-wrap">\n                    <h2>Ошибка при запросе к серверу</h2>\n                </div>\n            </div>\n        </div>'};Vue.createApp({data:()=>({catalogProductList:[],cartProductList:[],showCart:!1,totalAmount:0,showErrorServer:!1}),methods:{renderCart(t){t.preventDefault(),this.showCart=!0},renderCatalog(t){t.preventDefault(),this.showCart=!1},openModal(){this.showErrorServer=!0},closeModal(t){t.preventDefault(),this.showErrorServer=!1},setCatalogList(t){this.catalogProductList=t},setCartList(t){this.cartProductList=t,this.totalAmount=this.cartProductList.reduce(((t,o,e,s)=>t+o.amount),0)},getJson(t){return fetch(t,{method:"GET"}).then((t=>{if(t.status>=200&&t.status<400)return t.json();console.log(`${t.statusText}: ${t.status} error`),this.openModal()})).catch((t=>{console.log(t),this.openModal()}))},postJson(t,o){return fetch(t,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(o)}).then((t=>{if(t.status>=200&&t.status<400)return t.json();console.log(`${t.statusText}: ${t.status} error`),this.openModal()})).catch((t=>{console.log(t),this.openModal()}))},putJson(t,o){return fetch(t,{method:"PUT",headers:{"Content-Type":"application/json"},body:JSON.stringify(o)}).then((t=>{if(t.status>=200&&t.status<400)return t.json();console.log(`${t.statusText}: ${t.status} error`),this.openModal()})).catch((t=>{console.log(t),this.openModal()}))},deleteJson(t){return fetch(t,{method:"DELETE"}).then((t=>{if(t.status>=200&&t.status<400)return t.json();console.log(`${t.statusText}: ${t.status} error`),this.openModal()})).catch((t=>{console.log(t),this.openModal()}))}},components:{catalog:e,cart:s,"error-server":r}}).mount("#vue-app")})();